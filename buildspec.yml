version: 0.2

phases:
  install:
    runtime-versions:
      python: 3.9
    commands:
      - echo "Installing build dependencies..."
      - yum install -y jq zip

  build:
    commands:
      - echo "--- Packaging Lambda Functions using manifests ---"
      - |
        SERVICE_DIRS=("cost" "proposal_drafting" "sourcing")
        for service_dir in "${SERVICE_DIRS[@]}"; do
          echo "Packaging service: $service_dir"
          MANIFEST_FILE="$service_dir/manifest.json"
          if [ ! -f "$MANIFEST_FILE" ]; then
            echo "WARNING: Manifest file not found for $service_dir. Skipping."
            continue
          fi
          
          # Find all shared python files in the service's root directory
          shared_files=$(find "$service_dir" -maxdepth 1 -type f -name "*.py")

          # Iterate through the manifest to package each function
          for py_file in $(jq -r 'keys[]' "$MANIFEST_FILE"); do
            function_suffix=$(jq -r --arg key "$py_file" '.[$key]' "$MANIFEST_FILE")
            echo "  Preparing package for: $function_suffix"
            
            temp_package_dir="build/functions/pkg_${function_suffix}"
            mkdir -p "$temp_package_dir"

            # Copy the main handler file
            cp "$service_dir/lambda/$py_file" "$temp_package_dir/index.py"
            
            # Copy all shared utility files
            if [ -n "$shared_files" ]; then
              cp $shared_files "$temp_package_dir/"
            fi
            
            # Create the zip file
            (cd "$temp_package_dir" && zip -rq "../../${function_suffix}.zip" .)
            rm -rf "$temp_package_dir"
          done
        done

  post_build:
    commands:
      - echo "--- Discovering Lambda Functions via Tags ---"
      - |
        FUNCTION_LIST_JSON=$(aws resourcegroupstaggingapi get-resources --resource-type-filters "lambda:function" --tag-filters "Key=Project,Values=blackbox" "Key=Environment,Values=$TF_WORKSPACE")
        if [ -z "$FUNCTION_LIST_JSON" ]; then
          echo "ERROR: No Lambda functions found with the specified tags. Exiting."
          exit 1
        fi
        echo "  Successfully discovered functions to update."
      - echo "--- Uploading and Deploying Function Code ---"
      - |
        S3_ARTIFACT_BUCKET="blackbox-$TF_WORKSPACE-lambda-artifacts"
        for zip_file in build/functions/*.zip; do
            zip_name=$(basename "$zip_file" .zip)
            s3_key="lambda-code/${zip_name}/${CODEBUILD_RESOLVED_SOURCE_VERSION}.zip"
            FUNCTION_ARN=$(echo $FUNCTION_LIST_JSON | jq -r --arg name "$zip_name" '.ResourceTagMappingList[] | select(.ResourceARN | endswith($name)) | .ResourceARN')

            if [ -z "$FUNCTION_ARN" ]; then
              echo "WARNING: Could not find a deployed Lambda for $zip_name. Skipping."
              continue
            fi

            echo "Uploading $zip_file to s3://$S3_ARTIFACT_BUCKET/$s3_key"
            aws s3 cp "$zip_file" "s3://$S3_ARTIFACT_BUCKET/$s3_key"

            echo "Updating code for function: $FUNCTION_ARN"
            aws lambda update-function-code --function-name "$FUNCTION_ARN" --s3-bucket "$S3_ARTIFACT_BUCKET" --s3-key "$s3_key" --publish > /dev/null
        done
      - echo "--- Deployment Complete ---"